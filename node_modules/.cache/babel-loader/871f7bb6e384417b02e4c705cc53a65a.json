{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonon\\\\Desktop\\\\feedback-app\\\\src\\\\components\\\\FeedbackList.jsx\";\nimport React from \"react\";\nimport FeedbackItem from \"./FeedbackItem\";\nimport PropTypes from \"prop-types\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackList(_ref) {\n  let {\n    feedback,\n    handleDelete\n  } = _ref;\n\n  if (!feedback || feedback.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Feedback Yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  } // return (\n  //   <div className=\"feedback-list\">\n  //     <AnimatePresence>\n  //       {feedback.map((item) => (\n  //         <motion.div\n  //           key={item.id}\n  //           intial={{ opacity: 0 }}\n  //           animate={{ opactiy: 1 }}\n  //           exit={{ opacity: 0 }}\n  //         >\n  //           <FeedbackItem\n  //             key={item.id}\n  //             item={item}\n  //             handleDelete={handleDelete}\n  //           />\n  //         </motion.div>\n  //       ))}\n  //     </AnimatePresence>\n  //   </div>\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-list\",\n    children: feedback.map(item => /*#__PURE__*/_jsxDEV(FeedbackItem, {\n      item: item,\n      handleDelete: handleDelete\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FeedbackList;\nFeedbackList.propTypes = {\n  feedback: PropTypes.array\n};\nexport default FeedbackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackList\");","map":{"version":3,"sources":["C:/Users/bonon/Desktop/feedback-app/src/components/FeedbackList.jsx"],"names":["React","FeedbackItem","PropTypes","motion","AnimatePresence","FeedbackList","feedback","handleDelete","length","map","item","id","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;;;AAEA,SAASC,YAAT,OAAkD;AAAA,MAA5B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA4B;;AAChD,MAAI,CAACD,QAAD,IAAaA,QAAQ,CAACE,MAAT,KAAoB,CAArC,EAAwC;AACtC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAH+C,CAKhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGF,QAAQ,CAACG,GAAT,CAAcC,IAAD,iBACZ,QAAC,YAAD;AAA4B,MAAA,IAAI,EAAEA,IAAlC;AAAwC,MAAA,YAAY,EAAEH;AAAtD,OAAmBG,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAhCQN,Y;AAkCTA,YAAY,CAACO,SAAb,GAAyB;AACvBN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW;AADG,CAAzB;AAGA,eAAeR,YAAf","sourcesContent":["import React from \"react\";\r\nimport FeedbackItem from \"./FeedbackItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nfunction FeedbackList({ feedback, handleDelete }) {\r\n  if (!feedback || feedback.length === 0) {\r\n    return <p>No Feedback Yet</p>;\r\n  }\r\n\r\n  // return (\r\n  //   <div className=\"feedback-list\">\r\n  //     <AnimatePresence>\r\n  //       {feedback.map((item) => (\r\n  //         <motion.div\r\n  //           key={item.id}\r\n  //           intial={{ opacity: 0 }}\r\n  //           animate={{ opactiy: 1 }}\r\n  //           exit={{ opacity: 0 }}\r\n  //         >\r\n  //           <FeedbackItem\r\n  //             key={item.id}\r\n  //             item={item}\r\n  //             handleDelete={handleDelete}\r\n  //           />\r\n  //         </motion.div>\r\n  //       ))}\r\n  //     </AnimatePresence>\r\n  //   </div>\r\n  // );\r\n  return (\r\n    <div className=\"feedback-list\">\r\n      {feedback.map((item) => (\r\n        <FeedbackItem key={item.id} item={item} handleDelete={handleDelete} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackList.propTypes = {\r\n  feedback: PropTypes.array,\r\n};\r\nexport default FeedbackList;\r\n"]},"metadata":{},"sourceType":"module"}