{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonon\\\\Desktop\\\\feedback-app\\\\src\\\\components\\\\FeedbackStats.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackStats(_ref) {\n  let {\n    feedback\n  } = _ref;\n  let average = feedback.reduce((acc, cur) => {\n    return acc + cur.rating;\n  }, 0) / feedback.length;\n  average = average.toFixed(1).at(/[.,]0$/, \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Reviews: \", feedback.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Average Rating: \", isNaN(average) ? 0 : average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FeedbackStats;\nexport default FeedbackStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"sources":["C:/Users/bonon/Desktop/feedback-app/src/components/FeedbackStats.jsx"],"names":["React","FeedbackStats","feedback","average","reduce","acc","cur","rating","length","toFixed","at","isNaN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,OAAqC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACnC,MAAIC,OAAO,GACTD,QAAQ,CAACE,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,WAAOD,GAAG,GAAGC,GAAG,CAACC,MAAjB;AACD,GAFD,EAEG,CAFH,IAEQL,QAAQ,CAACM,MAHnB;AAKAL,EAAAA,OAAO,GAAGA,OAAO,CAACM,OAAR,CAAgB,CAAhB,EAAmBC,EAAnB,CAAsB,QAAtB,EAAgC,EAAhC,CAAV;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA,8BAAcR,QAAQ,CAACM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qCAAqBG,KAAK,CAACR,OAAD,CAAL,GAAiB,CAAjB,GAAqBA,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAdQF,a;AAgBT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction FeedbackStats({ feedback }) {\r\n  let average =\r\n    feedback.reduce((acc, cur) => {\r\n      return acc + cur.rating;\r\n    }, 0) / feedback.length;\r\n\r\n  average = average.toFixed(1).at(/[.,]0$/, \"\");\r\n\r\n  return (\r\n    <div className=\"feedback-stats\">\r\n      <h4>Reviews: {feedback.length}</h4>\r\n      <h4>Average Rating: {isNaN(average) ? 0 : average}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackStats;\r\n"]},"metadata":{},"sourceType":"module"}